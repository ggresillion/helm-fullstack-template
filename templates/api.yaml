apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "takeoff.fullname" . }}-api
  labels:
{{ include "takeoff.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "takeoff.name" . }}-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "takeoff.name" . }}-api
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imageCredentials.name }}
      containers:
        - name: {{ .Chart.Name }}-api
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
            - name: spring_profiles_active
              value: production
            - name: DB_HOST
              value: {{ include "takeoff.fullname" . }}-postgresql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "takeoff.fullname" . }}-database
                  key: password
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "takeoff.fullname" . }}-minio
                  key: access_key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "takeoff.fullname" . }}-minio
                  key: secret_key
            - name: ES_HOST
              value: {{ include "takeoff.fullname" . }}-elastic
            - name: MINIO_HOST
              value: {{ include "takeoff.fullname" . }}-minio
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "takeoff.fullname" . }}-api
  labels:
{{ include "takeoff.labels" . | indent 4 }}
spec:
  type: {{ .Values.api.service.type }}
  ports:
    - port: {{ .Values.api.service.port }}
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: {{ include "takeoff.name" . }}-api
    app.kubernetes.io/instance: {{ .Release.Name }}

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "takeoff.fullname" . }}-database
  labels:
{{ include "takeoff.labels" . | indent 4 }}
type: Opaque
data:
  password: {{ .Values.postgresql.postgresqlPassword | b64enc }}
